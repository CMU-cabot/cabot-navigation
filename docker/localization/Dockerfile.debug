ARG PREFIX=cabot
ARG FROM_IMAGE=${PREFIX}__jammy-humble-custom-mesa

FROM $FROM_IMAGE as build

ARG TZ=UTC
ENV TZ=$TZ
RUN sudo ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ | sudo tee /etc/timezone

# TODO replace with rosdep install
RUN apt update && \
    apt install -y --no-install-recommends \
    imagemagick \
    libpcap-dev \
    nodejs \
    npm \
    python-is-python3 \
    python3-pip \
    python3-matplotlib \
    python3-sklearn \
    ros-${ROS_DISTRO}-diagnostic-updater \
    ros-${ROS_DISTRO}-gazebo-msgs \
    ros-${ROS_DISTRO}-realsense2-description \
    ros-${ROS_DISTRO}-rosbridge-suite \
    ros-${ROS_DISTRO}-tf-transformations \
    ros-${ROS_DISTRO}-tf2-geometry-msgs \
    ros-${ROS_DISTRO}-velodyne-description \
    ros-${ROS_DISTRO}-rmw-cyclonedds-cpp \
    && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

RUN pip install --no-cache-dir \
    requests \
    certifi \
    orjson==3.10.6 \
    pyproj \
    rosbags

## install packages for ublox node and RTKLIB
RUN apt update && \
    apt-get install -y \
    libasio-dev \
    ros-${ROS_DISTRO}-rtcm-msgs \
    ros-${ROS_DISTRO}-nmea-msgs \
    gfortran \
    && \
    rm -rf /var/lib/apt/lists/*

## install RTKLIB
WORKDIR /opt
COPY ./RTKLIB/ ./RTKLIB/
RUN (cd RTKLIB/lib/iers/gcc/; make) && \
    (cd RTKLIB/app/consapp; make; make install) && \
    rm -rf RTKLIB

# TODO merge
RUN pip install --no-cache-dir \
	transforms3d==0.4.1 \
	pyserial
RUN apt update && \
    apt-get install -y \
    ros-${ROS_DISTRO}-navigation2 \
    ros-${ROS_DISTRO}-pointcloud-to-laserscan \
    xterm \
    && \
    rm -rf /var/lib/apt/lists/*
# end TODO

# start cartographer_ws setup
ENV CARTO_WS=/opt/cartographer_ws

RUN mkdir -p $CARTO_WS/src
COPY ./bluespace_ai_xsens_ros_mti_driver /opt/cartographer_ws/src/bluespace_ai_xsens_ros_mti_driver
COPY ./ublox /opt/cartographer_ws/src/ublox
COPY ./ntrip_client /opt/cartographer_ws/src/ntrip_client

WORKDIR /opt/cartographer_ws/

# build packages in /opt/cartographer_ws other than cartographer
RUN . /opt/custom_ws/install/setup.sh && \
	colcon build --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo

# start build cartographer
COPY ./cartographer /opt/cartographer_ws/src/cartographer
COPY ./cartographer_ros /opt/cartographer_ws/src/cartographer_ros

RUN apt update && rosdep update && rosdep install -q -y \
--from-paths src \
	--ignore-src

RUN src/cartographer/scripts/install_debs_cmake.sh && rm -rf /var/lib/apt/lists/*
RUN src/cartographer/scripts/install_abseil.sh && rm -rf /var/lib/apt/lists/*

RUN . /opt/custom_ws/install/setup.sh && \
	colcon build --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo
# end build cartographer

ARG ROS_DISTRO
RUN sed -i 's:custom_ws:cartographer_ws:' /ros_entrypoint.sh

# end cartographer_ws setup

WORKDIR /opt

COPY ./launch.sh /
COPY ./launch_rtklib.sh /

# setup for display
ENV USERNAME developer

### replace 1000 with your user/group id
ARG UID=1000
RUN useradd -m $USERNAME && \
    echo "$USERNAME:$USERNAME" | chpasswd && \
    usermod --shell /bin/bash $USERNAME && \
    usermod -aG sudo $USERNAME && \
    mkdir -p /etc/sudoers.d/ && \
    echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME && \
    chmod 0440 /etc/sudoers.d/$USERNAME && \
    usermod  --uid $UID $USERNAME && \
    groupmod --gid $UID $USERNAME

USER $USERNAME

ENV HOME /home/$USERNAME
WORKDIR $HOME/loc_ws
