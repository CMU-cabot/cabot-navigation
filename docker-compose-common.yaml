# Copyright (c) 2020, 2021  Carnegie Mellon University, IBM Corporation, and others
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


services:
  ros2-base:
    build:
      context: ./docker/ros2
      additional_contexts:
        cabot_src: ./
      args:
        - BASE_IMAGE=${BASE_IMAGE:-cabot-base}
      x-bake:
        tags:
          - ${REGISTRY:-cmucal}/cabot-navigation
        platforms:
          - linux/amd64
          - linux/arm64
        output:
          - type=registry
    environment:
      - HOST_UID
      - HOST_GID
      - HOST_TZ
# required for gazebo rendering
      - DISPLAY
      - NVIDIA_DRIVER_CAPABILITIES=compute,graphics,utility,video,display
      - NVIDIA_VISIBLE_DEVICES=all
# CaBot
      - CABOT_GAZEBO
      - CABOT_USE_SIM_TIME
      - CABOT_MODEL
      - CABOT_SIDE
      - CABOT_SITE
      - CABOT_LANG
      - CABOT_LOW_OBSTABLE_DETECT_VERSION
      - CABOT_OFFSET
      - CABOT_ANNOUNCE_NO_TOUCH
      - CABOT_INIT_SPEED
      - CABOT_GAMEPAD
      - CABOT_INITX
      - CABOT_INITY
      - CABOT_INITZ
      - CABOT_INITA
      - CABOT_MAP_SERVER_HOST
      - CABOT_ROSBRIDGE_PORT
      - GAZEBO_MASTER_URI
      - CABOT_SPEED_POI_PARAMS
      - CABOT_IMAGE_DESCRIPTION_SERVER
      - CABOT_IMAGE_DESCRIPTION_ENABLED
      - CABOT_IMAGE_DESCRIPTION_ROTATE_LEFT
      - CABOT_IMAGE_DESCRIPTION_ROTATE_FRONT
      - CABOT_IMAGE_DESCRIPTION_ROTATE_RIGHT
# ROS2/DDS
      - ROS_LOG_DIR
      - RMW_IMPLEMENTATION
      - CYCLONEDDS_URI
      - CYCLONEDDS_NETWORK_INTERFACE_NAME
      - CYCLONEDDS_NETWORK_INTERFACE_AUTODETERMINE # set automatically by launch.sh
      - ROS_LOCALHOST_ONLY=${ROS_LOCALHOST_ONLY:-false}
      - ROS_DOMAIN_ID
      - __NV_PRIME_RENDER_OFFLOAD
      - __GLX_VENDOR_LIBRARY_NAME
    volumes:
# bridge - if DDS use shared memory
      - /dev/shm:/dev/shm
# network
    privileged: true
    network_mode: host
# shutdown
    stop_signal: SIGINT
    stop_grace_period: 30s

  ros2-dev-base:
    extends: ros2-base
    volumes:
# code
      - ./config:/home/developer/config
      - ./cabot_site_pkg/${CABOT_SITE}:/home/developer/ros2_ws/install/${CABOT_SITE}
      - ./cabot:/home/developer/ros2_ws/src/cabot
      - ./cabot_bt:/home/developer/ros2_ws/src/cabot_bt
      - ./cabot-description/cabot_description:/home/developer/ros2_ws/src/cabot_description
      - ./cabot_diagnostics:/home/developer/ros2_ws/src/cabot_diagnostics
      - ./cabot_gazebo:/home/developer/ros2_ws/src/cabot_gazebo
      - ./cabot_navigation2:/home/developer/ros2_ws/src/cabot_navigation2
      - ./cabot_sites:/home/developer/ros2_ws/src/cabot_sites
      - ./cabot_ui:/home/developer/ros2_ws/src/cabot_ui
      - ./mf_localization_msgs:/home/developer/ros2_ws/src/mf_localization_msgs
      - ./mf_localization_rviz:/home/developer/ros2_ws/src/mf_localization_rviz
      - ./pedestrian_plugin:/home/developer/ros2_ws/src/pedestrian_plugin
      - ./pedestrian_plugin_msgs:/home/developer/ros2_ws/src/pedestrian_plugin_msgs
      - ./script:/home/developer/ros2_ws/script
      - ./cabot-common/cabot_common:/home/developer/ros2_ws/src/cabot_common
      - ./cabot-common/cabot_msgs:/home/developer/ros2_ws/src/cabot_msgs
      - ./queue_msgs:/home/developer/ros2_ws/src/queue_msgs
      - ./queue_people_py:/home/developer/ros2_ws/src/queue_people_py
      - ./queue_utils_py:/home/developer/ros2_ws/src/queue_utils_py

  ros2-prod-base:
    extends: ros2-base
    image: cmucal/cabot-navigation
    volumes:
# code
      - ./config:/home/developer/config
      - ./docker/home/.ros:/home/developer/.ros
      - ./cabot_site_pkg/${CABOT_SITE}:/home/developer/ros2_ws/install/${CABOT_SITE}

  ros2-dev:
    extends: ros2-dev-base
    environment:
# CaBot
      - CABOT_TOUCH_ENABLED=${CABOT_TOUCH_ENABLED:-true}
      - CABOT_TOUCH_PARAMS
      - CABOT_USE_HANDLE_SIMULATOR=${CABOT_USE_HANDLE_SIMULATOR:-0}
      - CABOT_ODRIVER_SERIAL_0
      - CABOT_ODRIVER_SERIAL_1
      - CABOT_REMOTE_USE_KEYBOARD
      - CABOT_REMOTE_USE_IMU
      - CABOT_FOOTPRINT_RADIUS
    volumes:
# device, bluetooth
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /var/lib/bluetooth:/var/lib/bluetooth
      - /run/dbus:/run/dbus
      - /var/run/dbus:/var/run/dbus
    devices:
      - /dev/dri
    stop_signal: SIGINT
    stop_grace_period: 30s

  ros2-prod:
    extends: ros2-prod-base
    environment:
# CaBot
      - CABOT_TOUCH_ENABLED=${CABOT_TOUCH_ENABLED:-true}
      - CABOT_TOUCH_PARAMS
      - CABOT_USE_HANDLE_SIMULATOR=${CABOT_USE_HANDLE_SIMULATOR:-0}
      - CABOT_ODRIVER_SERIAL_0
      - CABOT_ODRIVER_SERIAL_1
      - CABOT_REMOTE_USE_KEYBOARD
      - CABOT_REMOTE_USE_IMU
      - CABOT_FOOTPRINT_RADIUS
    volumes:
# device, bluetooth
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /var/lib/bluetooth:/var/lib/bluetooth
      - /run/dbus:/run/dbus
      - /var/run/dbus:/var/run/dbus
    devices:
      - /dev/dri
    stop_signal: SIGINT
    stop_grace_period: 30s

  navigation-dev-base:
    extends: ros2-dev
    command:
      - "/launch.sh"
      # - "-c"                  # core dump
      - "navigation"

  gazebo-dev-base:
    extends: ros2-dev-base
    command:
      - "/launch.sh"
      # - "-c"                  # core dump
      - "gazebo"
      #- "-g"                   # run with gdb

  gui-dev-base:
    extends: ros2-dev-base
    command:
      - "/launch.sh"
      # - "-c"                  # core dump
      - "gui"
    environment:
# CaBot
      - CABOT_SHOW_GAZEBO_CLIENT
      - CABOT_SHOW_ROBOT_MONITOR
      - CABOT_SHOW_ROS2_RVIZ=${CABOT_SHOW_ROS2_RVIZ:-1}
      - CABOT_SHOW_ROS2_LOCAL_RVIZ

  navigation-prod-base:
    extends: ros2-prod
    command:
      - "/launch.sh"
      # - "-c"                  # core dump
      - "navigation"

  gazebo-prod-base:
    extends: ros2-prod-base
    command:
      - "/launch.sh"
      # - "-c"                  # core dump
      - "gazebo"
      #- "-g"                   # run with gdb

  gui-prod-base:
    extends: ros2-prod-base
    command:
      - "/launch.sh"
      # - "-c"                  # core dump
      - "gui"
    environment:
# CaBot
      - CABOT_SHOW_GAZEBO_CLIENT
      - CABOT_SHOW_ROBOT_MONITOR
      - CABOT_SHOW_ROS2_RVIZ=${CABOT_SHOW_ROS2_RVIZ:-1}
      - CABOT_SHOW_ROS2_LOCAL_RVIZ

  navigation-dev:
    extends: navigation-dev-base
    volumes:
      - ./docker/home:/home/developer/

  gazebo-dev:
    extends: gazebo-dev-base
    volumes:
      - ./docker/home:/home/developer/

  gui-dev:
    extends: gui-dev-base
    volumes:
      - ./docker/home:/home/developer/

  navigation-prod:
    extends: navigation-prod-base

  gazebo-prod:
    extends: gazebo-prod-base

  gui-prod:
    extends: gui-prod-base

  localization-dev-base:
    build:
      context: ./docker/localization
      additional_contexts:
        cabot_src: ./
      args:
        - BASE_IMAGE=${BASE_IMAGE:-cabot-base}
      x-bake:
        tags:
          - ${REGISTRY:-cmucal}/cabot-localization
        platforms:
          - linux/amd64
          - linux/arm64
        output:
          - type=registry
    environment:
      - HOST_UID
      - HOST_GID
      - HOST_TZ
      - DISPLAY
      - XAUTHORITY=/tmp/.docker.xauth
      - NVIDIA_DRIVER_CAPABILITIES=compute,graphics,utility,video,display
      - ROS_LOG_DIR
# CaBot
      - CABOT_GAZEBO=${CABOT_GAZEBO:-1}
      - CABOT_PRESSURE_AVAILABLE=${CABOT_PRESSURE_AVAILABLE:-0}
      - CABOT_USE_GNSS=${CABOT_USE_GNSS:-0}
      - CABOT_MODEL
      - CABOT_SITE
      - CABOT_SHOW_LOC_RVIZ=${CABOT_SHOW_LOC_RVIZ:-1}
      - CABOT_HEADLESS
      - RMW_IMPLEMENTATION
      - CYCLONEDDS_URI
      - CYCLONEDDS_NETWORK_INTERFACE_NAME
      - CYCLONEDDS_NETWORK_INTERFACE_AUTODETERMINE # set automatically by launch.sh
      - ROS_DOMAIN_ID
      # ntrip client
      - NTRIP_CLIENT # rtklib, str2str_node, or ntrip_client
      - NTRIP_CLIENT_START_AT_LAUNCH=${NTRIP_CLIENT_START_AT_LAUNCH:-0}
      - GNSS_NODE_START_AT_LAUNCH=${GNSS_NODE_START_AT_LAUNCH:-1}
      - NTRIP_HOST
      - NTRIP_PORT=${NTRIP_PORT:-2101}
      - NTRIP_MOUNTPOINT
      - NTRIP_AUTHENTIFICATE
      - NTRIP_USERNAME
      - NTRIP_PASSWORD
      - NTRIP_STR2STR_RELAY_BACK=${NTRIP_STR2STR_RELAY_BACK:-0}
    volumes:
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /var/lib/bluetooth:/var/lib/bluetooth
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth
      - ./config:/home/developer/config
      - ./cabot_site_pkg/${CABOT_SITE}:/home/developer/loc_ws/install/${CABOT_SITE}
      - ./cabot-description/cabot_description:/home/developer/loc_ws/src/cabot_description
      - ./cabot-common/cabot_common:/home/developer/loc_ws/src/cabot_common
      - ./cabot-common/cabot_msgs:/home/developer/loc_ws/src/cabot_msgs
      - ./cabot_mf_localization:/home/developer/loc_ws/src/cabot_mf_localization
      - ./cabot_sites:/home/developer/loc_ws/src/cabot_sites
      - ./script:/home/developer/loc_ws/script
      - ./mf_localization:/home/developer/loc_ws/src/mf_localization
      - ./mf_localization_gazebo:/home/developer/loc_ws/src/mf_localization_gazebo
      - ./mf_localization_mapping:/home/developer/loc_ws/src/mf_localization_mapping
      - ./mf_localization_msgs:/home/developer/loc_ws/src/mf_localization_msgs
      - ./mf_localization_rviz:/home/developer/loc_ws/src/mf_localization_rviz
# bridge - if DDS use shared memory
      - /dev/shm:/dev/shm
    privileged: true
    devices:
      - /dev/dri
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
    network_mode: host
    command:
      - "/launch.sh"
      - "localization"
      - "-M"                                # start multifloor map server
      - "-R 1"                              # set publish_current_rate to 1hz
      # - "-C"                                # launch cvi client
      # - "-N"                                # start ROS1 navigation for development
    stop_signal: SIGINT
    stop_grace_period: 30s

  localization-prod-base:
    image: cmucal/cabot-localization
    environment:
      - HOST_UID
      - HOST_GID
      - HOST_TZ
      - DISPLAY
      - XAUTHORITY=/tmp/.docker.xauth
      - NVIDIA_DRIVER_CAPABILITIES=compute,graphics,utility,video,display
      - ROS_LOG_DIR
# CaBot
      - CABOT_GAZEBO=${CABOT_GAZEBO:-1}
      - CABOT_PRESSURE_AVAILABLE=${CABOT_PRESSURE_AVAILABLE:-0}
      - CABOT_USE_GNSS=${CABOT_USE_GNSS:-0}
      - CABOT_MODEL
      - CABOT_SITE
      - CABOT_SHOW_LOC_RVIZ=${CABOT_SHOW_LOC_RVIZ:-1}
      - CABOT_HEADLESS
      - RMW_IMPLEMENTATION
      - CYCLONEDDS_URI
      - CYCLONEDDS_NETWORK_INTERFACE_NAME
      - CYCLONEDDS_NETWORK_INTERFACE_AUTODETERMINE # set automatically by launch.sh
      - ROS_DOMAIN_ID
    volumes:
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /var/lib/bluetooth:/var/lib/bluetooth
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth
      - ./config:/home/developer/config
      - ./cabot_site_pkg/${CABOT_SITE}:/home/developer/loc_ws/install/${CABOT_SITE}
# bridge - if DDS use shared memory
      - /dev/shm:/dev/shm
    privileged: true
    devices:
      - /dev/dri
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
    network_mode: host
    command:
      - "/launch.sh"
      - "localization"
      - "-M"                                # start multifloor map server
      - "-R 1"                              # set publish_current_rate to 1hz
      # - "-C"                                # launch cvi client
      # - "-N"                                # start ROS1 navigation for development
    stop_signal: SIGINT
    stop_grace_period: 30s

  localization-dev:
    extends: localization-dev-base
    volumes:
      - ./docker/home:/home/developer/

  localization-prod:
    extends: localization-prod-base
